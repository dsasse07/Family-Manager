/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */
 :root {
    --white: rgb(221, 221, 221);
    --faded-black: rgba(0, 0, 0, 0.808);
    --blue: rgba(5, 89, 145, 0.75);
    --dark-blue: rgb(5, 89, 145);
    --green: rgb(6, 134, 2);
    --dark-red:rgb(124, 20, 2);
    --error: rgb(252, 52, 17);
    --shadow: 2px 2px 2px 1px rgba(0, 0, 3, 0.404);
 }

.glow {
  filter: drop-shadow(0 0 10px white);
}

.no-glow {
  filter: none !important;
}

@function random_range($min, $max) {
  $rand: random();
  $random_range: $min + floor($rand * (($max - $min) + 1));
  @return $random_range;
}

.snow {
  $total: 200;
  position: absolute;
  width: 10px;
  height: 10px;
  background: white;
  border-radius: 50%;

  z-index: -1;

  @for $i from 1 through $total {
    $random-x: random(1000000) * 0.0001vw;
    $random-offset: random_range(-100000, 100000) * 0.0001vw;
    $random-x-end: $random-x + $random-offset;
    $random-x-end-yoyo: $random-x + ($random-offset / 2);
    $random-yoyo-time: random_range(30000, 80000) / 100000;
    $random-yoyo-y: $random-yoyo-time * 100vh;
    $random-scale: random(10000) * 0.0001;
    $fall-duration: random_range(10, 30) * 1s;
    $fall-delay: random(30) * -1s;

    &:nth-child(#{$i}) {
      opacity: random(10000) * 0.0001;
      transform: translate($random-x, -10px) scale($random-scale);
      animation: fall-#{$i} $fall-duration $fall-delay linear infinite;
    }

    @keyframes fall-#{$i} {
      #{percentage($random-yoyo-time)} {
        transform: translate($random-x-end, $random-yoyo-y) scale($random-scale);
      }

      to {
        transform: translate($random-x-end-yoyo, 100vh) scale($random-scale);
      }
    }
  }
}

html {
  color: var(--white);
  background: radial-gradient( #1b2735 0%, #090a0f 100%);
  font-family: 'Cinzel Decorative', cursive;
  height: 100vh;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 150px minmax(400px,1fr);
  grid-template-areas:
  "header"
  "content"
  ;  
}

header#main {
  grid-area: "header";
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(475px, 1fr));
  grid-template-rows: 1fr auto;
  grid-auto-flow: column;
  align-items: center;
  background: var(--faded-black);
  min-height: 150px
}

#user{
  grid-column: 2;
  grid-row: 1;
  justify-self: end;
  font-size: 1.5rem;
  padding-right: 50px;
}

#navbar {
  grid-column: 1/3;
  grid-row: 2;
  grid-gap: 5px;
  display: grid;
  grid-template-columns: repeat(auto-fit, 120px);
  grid-auto-flow: column;
  justify-self: start;
  justify-items: center;
  align-items: center;
  margin-right: 20px;
  padding-right: 10px;
}

input#home {
  grid-row: 1;
  grid-column: 1;
  background:transparent;
  border: 0;
  font-size: 3rem;
  box-shadow: none;
  font-weight: bolder;
  width: auto;
  margin: 0;
  margin-left: 10px;
  padding: 0;
  height: auto;
}

input[type="submit"], input.button_to {
  color: var(--white);
  font-family: 'Cinzel Decorative', cursive;
}

#content {
  grid-row: content;
}

.page__title {
  grid-row: 1;
  grid-column: 1 / -1;
  font-size: 2rem;
  text-align: center;
}


input {
  height: 2rem;
  text-align: center;
  background: var(--white);
  border: 1px solid var(--white);
  border-radius: 10px;
  box-shadow: var(--shadow);
  margin: 5px;
  margin-top: 10px;
  margin-bottom: 10px;
  font-size: 15px;
  }

input[type="submit"] {
  background: var(--blue);
  color: var(--white);
  font-family: 'Cinzel Decorative', cursive;
  font-size: 0.75rem;
  min-width: 100px;
}
input[type="file"]::file-selector-button {
  background: var(--dark-blue);
  color: var(--white);
  border-radius: 10px;
  height: 1.2rem;
  font-size: 0.9rem;
}

input[type="file"]::-webkit-file-upload-button {
  background: var(--dark-blue);
  color: var(--white);
  border-radius: 10px;
  height: 1.75rem;
  font-size: 0.9rem;
  margin-top: 2px;
}

.error {
  color: var(--error);
  font-size: 1.2rem;
}










